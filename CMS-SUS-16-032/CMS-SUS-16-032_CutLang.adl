#info analysis
#  title "Search for the pair production of third-generation squarks with two-body decays to 
#  a bottom or charm quark and a neutralino in proton-proton collisions at sqrts = 13 TeV"
#  experiment CMS
#  id SUS-16-032
#  publication Phys. Lett. B 778 (2018) 263
#  sqrtS 13.0
#  lumi 35.9
#  arXiv 1707.07274  
#  hepdata 
#  doi 10.1016/j.physletb.2018.01.012

# OBJECTS
object jets
  take Jet
  select pT(Jet) > 25  
  select abs(Eta(Jet)) < 2.4

object bjets
  take jets
  select BTag(jets) == 1

object cjets
  take jets
  select cTag(jets) == 1 # for the moment take all other jets
# They have a 2D tagging algorithm (vs light and b jets)
# c tagging doesn't exist in Delphes, but written here just as an ad hoc property
# Can match with genparticles, or try to make JetFlavor work in Delphes

object muons
  take Muon
  select pT(Muon) > 10
  select abs(eta(Muon)) < 2.4
  select abs(d0(Muon)) < 2
# relative isolation Irel < 0.10

object electrons
  take Electron
  select pT(Electron) > 10
  select abs(eta(Electron)) < 2.4
  select abs(d0(Electron)) < 2
# relative isolation Irel < 0.21

#object vetotracks
# no isolation in Delphes, therefore cannot readily do it in Delphes
#  take Track
#  select pT > 10
#  select abs(eta) < 2.5
#  select sumPt / pT < 0.1 # R = 0.3
  
# VARIABLES
define MTj1 = sqrt( 2*pT(jets[0]) * MET*(1-cos(phi(METLV[0]) - phi(jets[0]) )))
define MTj2 = sqrt( 2*pT(jets[1]) * MET*(1-cos(phi(METLV[0]) - phi(jets[1]) )))
define MCT = 2*pT(jets[0]) * pT(jets[1]) * (1 + cos( dPhi( jets[0], jets[1] )))
#define dphimin2j = min(dPhi(jets[0:1], METLV_0)) ###### broken in CL
#define dphimin = min(dPhi(jets[0:2], METLV_0)) ###### broken in CL
define HT01 = pT(jets[0]) + pT(jets[1])
define HTbc = HT(bjets) + HT(cjets)

# EVENT SELECTION
# The noncompressed search regions
region noncompressed
  select Size(jets) [] 2 4
# reject size(jets) > 4 ? jets[4].pT > 75
  select Size(electrons) >= 0
  select Size(muons) >= 0
  select Size(electrons) + Size(muons) == 0
  select pT(jets[0]) > 100
  select BTag(jets[0]) == 1
  select pT(jets[1]) > 75
  select BTag(jets[1]) == 1
  select Size(jets) > 2 ? pT(jets[2]) > 30 : ALL
  select Size(jets) > 3 ? pT(jets[3]) > 30 : ALL
  select MET > 250
#  select Size(jets) == 2 ? dphimin2 > 0.4 : dphimin > 0.4  
#  select min(MTj1, MTj2) > 250### not in CL
  select MCT > 150

region noncompressedHT1
  noncompressed
  select HT01 [] 200 500
  bin MCT 150 250 350 450 ### not in CL

region noncompressedHT2
  noncompressed
  select HT01 [] 500 1000
  bin MCT 150 250 350 450 600  ### not in CL

region noncompressedHT3
  noncompressed
  select HT01 > 1000
  bin MCT 150 250 350 450 600 800

# The compressed search regions
region compressed
  select Size(jets) [] 2 4
  #reject size(jets) > 4 ? jets[4].pT > 75
  select Size(electrons) + Size(muons) == 0
  select pT(jets[0]) > 100
  select BTag(jets[0]) == 0 and cTag(jets[0]) == 0
  select BTag(jets[1]) == 0 and cTag(jets[1]) == 1
  select MET > 250
#  select Size(jets) == 2 ? dphimin2 > 0.4 : dphimin > 0.4  
#  select dphimin > 0.4  
  select pT(jets[1]) > 50 ? (pT(jets[0] jets[1]) + MET) / MET < 0.5 : (pT(jets[0]) + MET) / MET < 0.5 

region compressednb1
  compressed
  select Size(bjets) == 1
  select HTbc < 100
  bin MET 250 300 500 750 1000

region compressednb2
  compressed
  select size(bjets) == 1
  bin MET [] 250 300 AND HTbc < 100
  bin MET [] 250 300 AND HTbc [] 100 200
  bin MET [] 300 500 AND HTbc < 100
  bin MET [] 300 500 AND HTbc [] 100 200
  bin MET > 500 AND HTbc < 100
  bin MET > 500 AND HTbc [] 100 200

region compressednc1
  compressed
  select Size(cjets) == 1
  select HTbc < 100
  bin MET 250 300 500 750 1000

region compressednc2
  compressed
  select size(cjets) == 1
  bin MET [] 250 300 and HTbc < 100
  bin MET [] 250 300 and HTbc [] 100 200
  bin MET [] 300 500 and HTbc < 100
  bin MET [] 300 500 and HTbc [] 100 200
  bin MET [] 500 750 and HTbc < 100
  bin MET [] 500 750 and HTbc [] 100 200
  bin MET > 750 and HTbc < 100
  bin MET > 750 and HTbc [] 100 200

region compressednbnc0
  compressed
  # this region also requires 0 secondary vertices
  select size(bjets) + size(cjets) == 0
  bin MET 300 500 750 1000 1250

# There is another region like compressednbnc0 which has >0 secondary vertices


